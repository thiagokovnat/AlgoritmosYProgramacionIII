TestCase subclass: #TestMotoCarrera	instanceVariableNames: ''	classVariableNames: ''	package: 'ParcialAlgo3Tests'!!TestMotoCarrera methodsFor: 'tests' stamp: 'TK 6/30/2020 20:17'!test01PedirKilometrosAvanzadosDevuelveValorEsperado| unaMotoCarrera |unaMotoCarrera := VehiculoTerrestre crearMotoDeCarrera.self assert: [(unaMotoCarrera  cantidadKmAlAvanzarHoras: 2 ) = 480].! !TestCase subclass: #TestMotoneta	instanceVariableNames: ''	classVariableNames: ''	package: 'ParcialAlgo3Tests'!!TestMotoneta methodsFor: 'tests' stamp: 'TK 6/30/2020 20:37'!test02KilometrosConHorasNegativasLanzaError| unVehiculo |unVehiculo := VehiculoTerrestre crearMotoneta.self should: [ unVehiculo cantidadKmAlAvanzarHoras: -2] raise: HorasInvalidasError.! !!TestMotoneta methodsFor: 'tests' stamp: 'PabloS 6/14/2020 11:47'!testMotonetaAvanza80kmEnDosHs	"comment stating purpose of message"	| unaMotoneta |	unaMotoneta := VehiculoTerrestre crearMotoneta .	self assert: [(unaMotoneta cantidadKmAlAvanzarHoras: 2 )= 80].! !TestCase subclass: #TestVehiculoAveriado	instanceVariableNames: ''	classVariableNames: ''	package: 'ParcialAlgo3Tests'!!TestVehiculoAveriado methodsFor: 'tests' stamp: 'TK 6/30/2020 20:00'!test01PedirKilometrosAVehiculoAveriadoLanzaExcepcion| unVehiculoAveriado |unVehiculoAveriado := VehiculoAveriado new.self should: [ unVehiculoAveriado cantidadKilometrosAvanzados: 2 ] raise: VehiculoRotoNoAvanzaError ! !!TestVehiculoAveriado methodsFor: 'tests' stamp: 'TK 6/30/2020 20:12'!test02MotonetaAveriadaNoPuedeAvanzarKilometros| unaMotoneta |unaMotoneta := VehiculoTerrestre crearMotoneta.unaMotoneta romperVehiculo.self should: [ unaMotoneta cantidadKmAlAvanzarHoras: 2 ] raise: VehiculoRotoNoAvanzaError ! !TestCase subclass: #TestVehiculoTerrestre	instanceVariableNames: ''	classVariableNames: ''	package: 'ParcialAlgo3Tests'!!TestVehiculoTerrestre methodsFor: 'tests' stamp: 'TK 6/30/2020 19:57'!test01PedirKilometrosAvanzadosSinEspecificarVehiculoLanzaExcepcion| unVehiculo |unVehiculo := VehiculoTerrestre new.self should: [ unVehiculo cantidadKmAlAvanzarHoras: 2 ] raise: VehiculoNoEspecificadoError ! !